@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}

@model BusPortal.Web.Models.DTO.AddBookingViewModel

@{
    ViewData["Title"] = "Create Booking";
}

<div class="container mt-5">
    <h2>Create New Booking</h2>
    <form asp-action="Add" method="post">
        <div class="form-group mb-3">
            <label asp-for="StartCity">Start City</label>
            <select asp-for="StartCity" 
            class="form-control" 
            asp-items="ViewBag.StartCities"
            id="startCitySelect">
                <option value="">Select Start City</option>
            </select>
            <span asp-validation-for="StartCity" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="DestinationCity">Destination City</label>
            <select asp-for="DestinationCity" 
            class="form-control" 
            id="destinationCitySelect">
                <option value="">Select Destination City</option>
            </select>
            <span asp-validation-for="DestinationCity" class="text-danger"></span>
        </div>
        <div class="form-group mt-3">
            <label>Select Your Seat</label>
            @using System.Linq

            @{
                bool IsOccupied(string seat){
                    var occupiedSeatsList = ViewBag.OccupiedSeats as List<string>;
                    if (occupiedSeatsList != null)
                    {
                        return occupiedSeatsList.Any(occupiedSeat => occupiedSeat.Trim() == seat);
                    }
                    return false;
                }
            }
            <div class="bus-layout">
                <div class="seats-container">
                    @for (int row = 1; row <= 10; row++)
                    {
                        <div class="seat-row">
                            <div class="seat @(IsOccupied($" {row}A") ? "occupied" : "available")" data-seat="@(row)A">
                                <input type="checkbox" name="selectedSeats" value="@($" {row}A")" @(IsOccupied($"{row}A") ? "disabled" : "") />
                                @($"{row}A")
                            </div>
                            <div class="seat @(IsOccupied($" {row}B") ? "occupied" : "available")" data-seat="@(row)B">
                                <input type="checkbox" name="selectedSeats" value="@($" {row}B")" @(IsOccupied($"{row}B") ? "disabled" : "") />
                                @($"{row}B")
                            </div>
                            <div class="seat @(IsOccupied($" {row}C") ? "occupied" : "available")" data-seat="@(row)C">
                                <input type="checkbox" name="selectedSeats" value="@($" {row}C")" @(IsOccupied($"{row}C") ? "disabled" : "") />
                                @($"{row}C")
                            </div>
                            <div class="seat @(IsOccupied($" {row}D") ? "occupied" : "available")" data-seat="@(row)D">
                                <input type="checkbox" name="selectedSeats" value="@($" {row}D")" @(IsOccupied($"{row}D") ? "disabled" : "") />
                                @($"{row}D")
                            </div>
                        </div>
                    }
                </div>
            </div>
                    
            <input type="hidden" id="selectedSeat" name="Seat" required />
        </div>
          <div class="form-group mb-3">
            <label asp-for="Price">Price</label>
            <input asp-for="Price" class="form-control" id="priceInput" readonly />
            <span asp-validation-for="Price" class="text-danger"></span>
        </div>

        <div class="form-group mb-3">
            <label asp-for="DepartureTimes">Available Departure Time</label>
            <select asp-for="DepartureTimes"
                    class="form-control"
                    id="DepartureTimes">
                <option value="">Departure Time</option>
            </select>
            <span asp-validation-for="DepartureTimes" class="text-danger"></span>
        </div>
        <div class="form-group mb-3">
            <label asp-for="DateTime">Date</label>
            <input asp-for="DateTime" class="form-control" />
            <span asp-validation-for="DateTime" class="text-danger"></span>
        </div>
<button type="button" class="btn btn-primary" id="createBookingBtn">Create Booking</button>
    </form>
</div>

<style>
    .bus-layout {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 8px;
        margin: 20px 0;
    }

    .seats-container {
        max-width: 400px;
        margin: 0 auto;
    }

    .seat-row {
        display: flex;
        justify-content: center;
        margin: 5px 0;
    }

    .seat {
        width: 40px;
        height: 40px;
        margin: 3px;
        display: flex;
        align-items: center;
        justify-content: center;
        background: #fff;
        border: 1px solid #ddd;
        border-radius: 5px;
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .seat:hover {
        background: #e9ecef;
    }

    .seat.selected {
        background: #0d6efd;
        color: white;
    }

    .seat.occupied {
        background: #dc3545;
        color: white;
        cursor: not-allowed;
    }

    .aisle {
        width: 20px;
    }
</style>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#startCitySelect').change(function () {
                var startCity = $(this).val();
                if (startCity) {
                    $.getJSON('@Url.Action("GetDestinationCities", "Bookings")', { startCity: startCity }, function (data) {
                        var destinationSelect = $('#destinationCitySelect');
                        destinationSelect.empty();
                        destinationSelect.append('<option value="">Select Destination City</option>');
                        $.each(data, function (index, item) {
                            destinationSelect.append('<option value="' + item + '">' + item + '</option>');
                        });
                    }).fail(function() {
                        $('#destinationCitySelect').empty().append('<option value="">Select Destination City</option>');
                    });
                } else {
                    $('#destinationCitySelect').empty().append('<option value="">Select Destination City</option>');
                }
            });

            $('#destinationCitySelect').change(function (){
                var startCity = $('#startCitySelect').val();
                var destinationCity = $(this).val();
                if(startCity && destinationCity){
                    $.getJSON('@Url.Action("GetDepartureTimes", "Bookings")',
                    { startCity: startCity, destinationCity: destinationCity}, function (data){
                        var departureTimesSelect = $('#DepartureTimes');
                        departureTimesSelect.empty();
                        departureTimesSelect.append('<option value="">Departure Time</option>');
                        $.each(data, function (index, item){
                            departureTimesSelect.append('<option value="' + item + '">' + item + '</option>');
                        });
                    });
                } else{
                    $('#DepartureTimes').empty()
                    .append('<option value="">Departure Time</option>');
                }
            });

            $('#startCitySelect, #destinationCitySelect').change(function () {
                var startCity = $('#startCitySelect').val();
                var destinationCity = $('#destinationCitySelect').val();
                if (startCity && destinationCity) {
                    $.getJSON('@Url.Action("GetPrice", "Home")', { startCity: startCity, destinationCity: destinationCity }, function (data) {
                        $('#priceInput').val(data);
                    }).fail(function() {
                        $('#priceInput').val('');
                    });
                } else {
                    $('#priceInput').val('');
                }
            });

            $('.seat').click(function() {
                if ($(this).hasClass('occupied')) {
                    return;
                }

                $('.seat').removeClass('selected');
                $(this).addClass('selected');
                $('#selectedSeat').val($(this).data('seat'));
            });

            $('form').submit(function(e) {
                if (!$('#selectedSeat').val()) {
                    e.preventDefault();
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please select a seat!'
                    });
                }
            });

            $('#createBookingBtn').click(function () {
                var startCity = $('#startCitySelect').val();
                var destinationCity = $('#destinationCitySelect').val();
                var price = $('#priceInput').val();

                if (startCity && destinationCity && price) {
                    window.location.href = '@Url.Action("CreateCheckoutSession", "Home")?startCity=' + startCity + '&destinationCity=' + destinationCity + '&price=' + price;
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Oops...',
                        text: 'Please select both start and destination city, and ensure the price is available.'
                    });
                }
            });
        });
    </script>
}
@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success mt-3">
        @TempData["SuccessMessage"]
    </div>
}
